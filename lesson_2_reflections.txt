Q: What happens when you initialize a repository? Why do you need to do it?

A: We need to initialize the repository to tell git that it needs to start tracking
the repository. When we do that, git creates hidden directories where it will
add its files.

Q: How is the staging area different from the working directory and the repository?
What value do you think it offers?
 
A: The staging area is where we put the files we are tracking in the next commit.
It is extremely valuable because it allows us to track only what makes sense in
a commit. 

Q: How can you use the staging area to make sure you have one commit per logical 
change?

A: I only add the files I want to commit, i.e., the files in the same logical set.

Q: What are some situations when branches would be helpful in keeping your history 
organized? How would branches help?

A: Branches should be great to test new features. They would avoid an excess of 
checkouts and detached head state.

Q: How do the diagrams help you visualize the branch structure?

A: The diagrams function as a detailed timeline to help us understand the 
repository.

Q: What is the result of merging two branches together? Why do we represent it 
in the diagram the way we do?

A: Mergin two branches is useful both conceptually, to help us organize our code 
history and pragmatically, because it often actually creates a new version of the
file with all changes combined.
